name: Version Management

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type to bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:ci

      - name: Bump version
        id: bump
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION_TYPE="${{ github.event.inputs.version_type }}"
          else
            VERSION_TYPE="patch"
          fi
          
          npm version $VERSION_TYPE --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create Release Pull Request or Push to main
        id: changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git commit -m "Bump version to ${{ steps.bump.outputs.new_version }}"
          git tag -a "v${{ steps.bump.outputs.new_version }}" -m "Release v${{ steps.bump.outputs.new_version }}"
          git push origin main
          git push origin "v${{ steps.bump.outputs.new_version }}"

      - name: Create Release Notes
        id: release_notes
        run: |
          echo "## What's Changed" > release_notes.md
          echo "" >> release_notes.md
          echo "### New Features" >> release_notes.md
          echo "- Performance improvements" >> release_notes.md
          echo "- Bug fixes" >> release_notes.md
          echo "" >> release_notes.md
          echo "### Installation" >> release_notes.md
          echo "" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo "npm install turbo-map@${{ steps.bump.outputs.new_version }}" >> release_notes.md
          echo '```' >> release_notes.md
          echo "" >> release_notes.md
          echo "### Usage" >> release_notes.md
          echo "" >> release_notes.md
          echo '```javascript' >> release_notes.md
          echo "import { TurboMap } from 'turbo-map';" >> release_notes.md
          echo "" >> release_notes.md
          echo "const map = new TurboMap();" >> release_notes.md
          echo "map.set({ id: 1, name: 'test' }, 'value');" >> release_notes.md
          echo '```' >> release_notes.md

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.bump.outputs.new_version }}"
          release_name: "Release v${{ steps.bump.outputs.new_version }}"
          body_path: release_notes.md
          draft: false
          prerelease: false 