name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm run test:ci

      - name: Security check
        run: npm run security:check

      - name: Build project
        run: npm run build

      - name: Test build output
        run: |
          node -e "import('./dist/index.esm.js').then(m => { console.log('ESM build works'); });"
          node -e "import('./dist/index.js').then(m => { console.log('CommonJS build works'); });"

      - name: Validate package.json
        run: |
          echo "🔍 验证 package.json 配置..."
          echo "📦 包名称: $(node -p "require('./package.json').name")"
          echo "📋 版本: $(node -p "require('./package.json').version")"
          echo "📝 描述: $(node -p "require('./package.json').description")"
          echo "🔗 主页: $(node -p "require('./package.json').homepage")"
          echo "📄 许可证: $(node -p "require('./package.json').license")"
          echo "👤 作者: $(node -p "require('./package.json').author")"
          
          # 验证必需字段
          if [ -z "$(node -p "require('./package.json').name")" ]; then
            echo "❌ 缺少包名称"
            exit 1
          fi
          
          if [ -z "$(node -p "require('./package.json').version")" ]; then
            echo "❌ 缺少版本号"
            exit 1
          fi
          
          if [ -z "$(node -p "require('./package.json').description")" ]; then
            echo "❌ 缺少描述"
            exit 1
          fi
          
          echo "✅ package.json 验证通过"

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for known vulnerabilities
        run: npm audit --audit-level=high

  bundle-size:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Check bundle size
        run: |
          echo "Bundle sizes:"
          ls -la dist/
          echo "UMD bundle size:"
          wc -c < dist/index.umd.min.js | numfmt --to=iec
          echo "ESM bundle size:"
          wc -c < dist/index.esm.js | numfmt --to=iec

  performance:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Notify on failure (Slack)
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          channel: "#ci-cd"
          username: "CI/CD Bot"
          icon_emoji: ":warning:"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        continue-on-error: true

      - name: Notify on failure (Discord)
        if: failure()
        run: |
          if [ -n "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
            curl -H "Content-Type: application/json" \
                 -d '{
                   "embeds": [{
                     "title": "❌ CI/CD Pipeline Failed",
                     "description": "The CI/CD pipeline for turbo-map has failed.",
                     "color": 15158332,
                     "fields": [
                       {
                         "name": "Repository",
                         "value": "${{ github.repository }}",
                         "inline": true
                       },
                       {
                         "name": "Branch",
                         "value": "${{ github.ref_name }}",
                         "inline": true
                       },
                       {
                         "name": "Commit",
                         "value": "${{ github.sha }}",
                         "inline": true
                       }
                     ],
                     "timestamp": "${{ github.event.head_commit.timestamp }}"
                   }]
                 }' \
                 "${{ secrets.DISCORD_WEBHOOK_URL }}"
            echo "✅ Discord failure notification sent"
          else
            echo "ℹ️ Discord webhook not configured, skipping failure notification"
          fi
        continue-on-error: true

      - name: Notify on success (Discord)
        if: success()
        run: |
          if [ -n "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
            curl -H "Content-Type: application/json" \
                 -d '{
                   "embeds": [{
                     "title": "✅ CI/CD Pipeline Succeeded",
                     "description": "The CI/CD pipeline for turbo-map has completed successfully.",
                     "color": 3066993,
                     "fields": [
                       {
                         "name": "Repository",
                         "value": "${{ github.repository }}",
                         "inline": true
                       },
                       {
                         "name": "Branch",
                         "value": "${{ github.ref_name }}",
                         "inline": true
                       },
                       {
                         "name": "Commit",
                         "value": "${{ github.sha }}",
                         "inline": true
                       }
                     ],
                     "timestamp": "${{ github.event.head_commit.timestamp }}"
                   }]
                 }' \
                 "${{ secrets.DISCORD_WEBHOOK_URL }}"
            echo "✅ Discord success notification sent"
          else
            echo "ℹ️ Discord webhook not configured, skipping success notification"
          fi
        continue-on-error: true
